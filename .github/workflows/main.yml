name: Node.js CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x,12.x,14.x,15.x]  # Run the build for both Node.js 10.x and 15.x
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Python 3.10 (Fix node-gyp issue)
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Configure npm to use Python 3
        run: npm config set python python3

      - name: Install latest node-gyp
        run: npm install -g node-gyp@latest

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Remove node_modules and package-lock.json
        run: rm -rf node_modules package-lock.json

      - name: Install dependencies 
        run: |
          npm install

      - name: Debug npm error log
        run: |
          echo "Running npm ci..."
          npm ci || true  # Run npm ci but continue even if it fails
          echo "Displaying npm debug log if any error occurs..."
          cat /home/runner/.npm/_logs/*.log || true  # Display logs if available

      - name: Build application
        run: npm run build --if-present

      - name: Run tests
        run: npm test

  publish:
    needs: [security, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
